on:
  pull_request:
  push:
    branches-ignore:
      - 'dependabot/**'

env:
  CI: true

jobs:
  init:
    if: "! contains(github.event.head_commit.message, '[skip ci]')"
    runs-on: ubuntu-latest
    steps:
      - uses: brad-jones/actions/cancel-redundant@v1.0.0
        with:
          token: ${{ secrets.CANCEL_GITHUB_TOKEN }}

  test:
    needs: init
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Read .go-version
        run: echo ::set-output name=GO_VERSION::$(cat .go-version | cut -c 2-)
        id: gvm
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ steps.gvm.outputs.GO_VERSION }}
      - uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-go-
      - run: go test -v ./...

  release:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/v2'
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v2
      - name: Read .go-version
        run: echo ::set-output name=GO_VERSION::$(cat .go-version | cut -c 2-)
        id: gvm
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ steps.gvm.outputs.GO_VERSION }}
      - name: Read .node-version
        run: echo ::set-output name=NODE_VERSION::$(cat .node-version | cut -c 2-)
        id: nvm
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ steps.nvm.outputs.NODE_VERSION }}
      - uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-go-
      - uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-
      - run: npm ci
      - run: npx semantic-release --dry-run
